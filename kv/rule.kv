<rule>:

    txt1: txt1

    canvas:
        Color:
            rgb: utils.get_color_from_hex("#35477d")
        Rectangle:
            size: self.size
            pos: self.pos
    FloatLayout:
        canvas:
            Color:
                rgb: utils.get_color_from_hex("#35477d")
            Rectangle:
            Rectangle:
                size: self.size
                pos: self.pos

        ScrollView:
            size_hint: 1, .15
            pos_hint: {"top": .95, "right": 1}
            GridLayout:
                canvas:
                    Color:
                        #rgb: utils.get_color_from_hex("#35477d")

        Label:
            id: Processing
            text: "Web Scraping"
            size_hint: .8, .1
            pos_hint: {"top": .90, "right": .9}
            on_text:
                self.focus = not self.focus if self.text.endswith("\n") else self.focus
                #self.text = self.text.replace("\n","")


        TextInput:
            hint_text: "Competition Details"
            size_hint: .8, .2
            pos_hint: {"top": .70, "right": .9}
            id: txt1
            on_text:
                self.focus = not self.focus if "\n" in self.text else self.focus

        Button:
            text: "Result"
            canvas.before:
                Color:
                    rgb: utils.get_color_from_hex("#35477d") if self.state == 'normal' else utils.get_color_from_hex("#6C5B7B")
                Rectangle:
                    size: self.size
                    pos: self.pos
            size_hint: .5, .1
            pos_hint: {"top": .1, "right": 1}
            markup: True
            on_release:
                root.btn()





        GridLayout:



        Button:
            text: "Scrap"
            canvas.before:
                Color:
                    rgb: utils.get_color_from_hex("#35477d") if self.state == 'normal' else utils.get_color_from_hex("#6C5B7B")
                Rectangle:
                    size: self.size
                    pos: self.pos
            size_hint: .5, .1
            pos_hint: {"top": .1, "right": 1}
            markup: True
            on_release:
                root.btn()

        Button:
            text: "Back"
            canvas.before:
                Color:
                    rgb: utils.get_color_from_hex("#35477d") if self.state == 'normal' else utils.get_color_from_hex("#6C5B7B")
                Rectangle:
                    size: self.size
                    pos: self.pos
            size_hint: .5, .1
            pos_hint: {"top": .1, "right": .5}
            markup: True
            on_release:
                app.change_screen("home_screen", direction = 'backwards')
